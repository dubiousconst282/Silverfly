{
  $type: TranslationUnit,
  Tree: {
    $type: BlockNode,
    SeperatorSymbol: ;,
    Terminator: #eof,
    Children: {
      $type: ImmutableList<AstNode>,
      $values: [
        {
          $type: CallNode,
          FunctionExpr: {
            $type: NameNode,
            Name: a,
            Range: 1:1-1:1
          },
          Arguments: {
            $type: ImmutableList<AstNode>,
            $values: [
              {
                $type: TernaryOperatorNode,
                FirstExpr: {
                  $type: NameNode,
                  Name: b,
                  Range: 1:3-1:3
                },
                SecondExpr: {
                  $type: NameNode,
                  Name: c,
                  Range: 1:7-1:7
                },
                ThirdExpr: {
                  $type: InvalidNode,
                  Token: {
                    $type: Token,
                    Type: #invalid,
                    Text: :,
                    Line: 1,
                    Column: 9,
                    Document: {
                      Filename: syntethic.dsl,
                      Source: a(b ? c : d, e + f),
                      Messages: [
                        syntethic.dsl:1:9 Unknown Character ':',
                        Expected token : and found #invalid(:),
                        syntethic.dsl:1:9 Could not parse prefix ":".,
                        Expected token ) and found :(:),
                        syntethic.dsl:1:9 Could not parse prefix ":".,
                        syntethic.dsl:1:12 Could not parse prefix ",".,
                        syntethic.dsl:1:19 Could not parse prefix ")".
                      ]
                    }
                  },
                  Range: 1:9-1:9
                },
                Range: 1:3-1:5
              }
            ]
          },
          Range: 1:1-1:2,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        },
        {
          $type: InvalidNode,
          Token: {
            $type: Token,
            Type: :,
            Text: :,
            Line: 1,
            Column: 9,
            Document: {
              Filename: syntethic.dsl,
              Source: a(b ? c : d, e + f),
              Messages: [
                syntethic.dsl:1:9 Unknown Character ':',
                Expected token : and found #invalid(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                Expected token ) and found :(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                syntethic.dsl:1:12 Could not parse prefix ",".,
                syntethic.dsl:1:19 Could not parse prefix ")".
              ]
            }
          },
          Range: 1:9-1:9,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        },
        {
          $type: NameNode,
          Name: d,
          Range: 1:11-1:11,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        },
        {
          $type: InvalidNode,
          Token: {
            $type: Token,
            Type: ,,
            Text: ,,
            Line: 1,
            Column: 12,
            Document: {
              Filename: syntethic.dsl,
              Source: a(b ? c : d, e + f),
              Messages: [
                syntethic.dsl:1:9 Unknown Character ':',
                Expected token : and found #invalid(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                Expected token ) and found :(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                syntethic.dsl:1:12 Could not parse prefix ",".,
                syntethic.dsl:1:19 Could not parse prefix ")".
              ]
            }
          },
          Range: 1:12-1:12,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        },
        {
          $type: BinaryOperatorNode,
          LeftExpr: {
            $type: NameNode,
            Name: e,
            Range: 1:14-1:14
          },
          Operator: +,
          RightExpr: {
            $type: NameNode,
            Name: f,
            Range: 1:18-1:18
          },
          Range: 1:14-1:18,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        },
        {
          $type: InvalidNode,
          Token: {
            $type: Token,
            Type: ),
            Text: ),
            Line: 1,
            Column: 19,
            Document: {
              Filename: syntethic.dsl,
              Source: a(b ? c : d, e + f),
              Messages: [
                syntethic.dsl:1:9 Unknown Character ':',
                Expected token : and found #invalid(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                Expected token ) and found :(:),
                syntethic.dsl:1:9 Could not parse prefix ":".,
                syntethic.dsl:1:12 Could not parse prefix ",".,
                syntethic.dsl:1:19 Could not parse prefix ")".
              ]
            }
          },
          Range: 1:19-1:19,
          Parent: {
            $type: BlockNode,
            SeperatorSymbol: ;,
            Terminator: #eof
          }
        }
      ]
    },
    Range: 1:1-1:23
  },
  Document: {
    Filename: syntethic.dsl,
    Source: a(b ? c : d, e + f),
    Messages: [
      syntethic.dsl:1:9 Unknown Character ':',
      Expected token : and found #invalid(:),
      syntethic.dsl:1:9 Could not parse prefix ":".,
      Expected token ) and found :(:),
      syntethic.dsl:1:9 Could not parse prefix ":".,
      syntethic.dsl:1:12 Could not parse prefix ",".,
      syntethic.dsl:1:19 Could not parse prefix ")".
    ]
  }
}