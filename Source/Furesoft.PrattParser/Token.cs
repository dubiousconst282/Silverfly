using System;
using Furesoft.PrattParser.Text;

namespace Furesoft.PrattParser;

/// <summary>
/// A simple token class. These are generated by <see cref="Lexer"/>
/// and consumed by <see cref="Parser"/>.
/// </summary>
public struct Token(Symbol type, ReadOnlyMemory<char> text, int line, int column)
{
    public Symbol Type { get; } = type;

    public ReadOnlyMemory<char> Text { get; set; } = text;

    public int Line { get; } = line;

    public int Column { get; } = column;

    public SourceDocument Document { get; set; }

    public Token(Symbol type, int line, int column)
    : this(type, type.Name.AsMemory(), line, column)
    {
        
    }

    public override string ToString() { return Text.ToString(); }

    public SourceSpan GetSourceSpanStart()
    {
        return new(Line, Column);
    }

    public SourceSpan GetSourceSpanEnd()
    {
        return new(Line, Column + Text.Length - 1);
    }

    public Token WithDocument(SourceDocument document)
    {
        this.Document = document;
        
        return this;
    }

    public SourceRange GetRange()
    {
        return new(Document, GetSourceSpanStart(), GetSourceSpanEnd());
    }
}
